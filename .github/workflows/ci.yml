name: Docker Image CI
# Define trigger conditions that result in CI pipeline workflow
on:
  push:
    branches:
    - "main"
    - 'feature/**'
  pull_request:
    branches:
    - "main"
    - "feature/**"

jobs:
  # Configure set of actions that will be performed once triggered
  Build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
    # A github repository named 'checkout' ( ref - github.com/actions/checkout ) contains an action yaml file defining actions to be performed in order to checkout 
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      run: |
        # Creates the environment variables required for the build in a secure manner
        echo "${{ secrets.MONGO }}" > .appenv
        echo "${{ secrets.MONGODB_CREDS }}" > .mongoenv
        docker compose up --build -d

    - name: E2E Testing
      run: |
        # Waits the required time in order for tests to run successfully.
        sleep 3
        bash ./e2e.sh
    - name: Tag, you're it.
      if: github.ref == 'refs/heads/main'
      id: tag
      run: |
        git fetch --tags
        LATEST_COMMIT_MSG=$(git log -1 --pretty=%B)
        MAJOR=$(git tag | sort -V | tail -1 | cut -d '.' -f1)
        MINOR=$(git tag | sort -V | tail -1 | cut -d '.' -f2)
        PATCH=$(git tag | sort -V | tail -1 | cut -d '.' -f3)
        if echo "$LATEST_COMMIT_MSG" | grep -q 'MAJOR'; then
          ((MAJOR=$MAJOR+1))
          updated_tag="$MAJOR.0.0"
        elif echo "$LATEST_COMMIT_MSG" | grep -q 'MINOR'; then
          ((MINOR=$MINOR+1))
          updated_tag="$MAJOR.$MINOR.0"
        else
          ((PATCH=$PATCH+1))
          updated_tag="${MAJOR}.${MINOR}.${PATCH}"
        fi
        git tag "${updated_tag}" || git tag "1.0.0"
        echo "tag=${updated_tag}" >> $GITHUB_OUTPUT
        git push --tag
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: stav352/portfolio:${{ steps.tag.outputs.tag }}
  Update:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Login to GitOps repo
      if: github.ref == 'refs/heads/main'
      uses: actions/checkout@v3
      with:
        repository: Stav352/Portfolio-GitOps-Config
        ref: 'main'
        token: ${{ secrets.ACTION_TOKEN }}
    - name: Update
      run: |
        git config --global user.email "${{ secrets.EMAIL }}"
        git config --global user.name "${{ secrets.USERNAME }}"
        sed -i "s/tag:.*/tag: ${{ needs.Build.outputs.tag }}/" charts/values.yaml
        git add charts/values.yaml
        git commit -m "CI Update $GITHUB_RUN_NUMBER"
        git push origin main
    - name: Slack Notification
      if: success() || failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: "CI Pipeline ${{ job.status }}"
        SLACK_FOOTER: "Powered by Stav's Portfolio CI  :rocket: "

